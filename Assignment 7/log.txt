First, I logged into server 7 with:
  ssh tsain@lnxsrv07.seas.ucla.edu
Then I logged in by typing my password

I set my path with:
  export PATH=/usr/local/cs/bin/:$PATH

I checked the version of sort with
  sort --version

Once I verified that I am using a new-enough version of sort,
I now want to use od, tr, and sed to generate a file containing 
10,000,000 random double-precision floating point numbers, one 
per line with no white space. I used the command
  od -An -t fD -N 80000000 < /dev/urandom | tr -s [:blank:] '\n' | sed '/^$/d' > randomNumbers.txt

Here is what each argument of each command does:
od
	-An: Output format for file offsets

	-t: Select output format (fD)

	-N: Read bytes

	80000000: 10000000 floats * 8 bytes per float, means we want 80000000 bytes

tr
	-s: replace each blank with a new line

I used time -p and sort -g on the randomNumbers.txt file and outputted
to /dev/null, trying out --parallel at 1, 2, 4, and 8 threads
  
Non-parallel Sort
Command: time -p sort -g randomNumbers.txt > /dev/null
Output:
real 41.71
user 206.24
sys  0.39

1 Thread
Command: time -p sort -g --parallel=1 randomNumbers.txt > /dev/null
Output:
real 177.13
user 177.00
sys  0.20

2 Threads
Command: time -p sort -g --parallel=2 randomNumbers.txt > /dev/null
Output:
real 96.19
user 183.20
sys  0.24

4 Threads
Command: time -p sort -g --parallel=4 randomNumbers.txt > /dev/null
Output:
real 59.02
user 191.94
sys  0.31

8 Threads
Command: time -p sort -g --parallel=8 randomNumbers.txt > /dev/null
Output:
real 39.92
user 205.25
sys  0.38